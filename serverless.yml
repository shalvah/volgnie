service: volgnie
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

frameworkVersion: '^2.66'
useDotenv: true

plugins:
  - serverless-offline
  - serverless-rack

provider:
  name: aws
  runtime: ruby2.7
  memorySize: 256
  logRetentionInDays: 30
  lambdaHashingVersion: 20201221
  timeout: 30
  region: us-east-1
  httpApi:
    shouldStartNameWithService: false
    payload: '1.0'
  iamRoleStatements:
    - Effect: Allow
      Action: [ "sns:Publish" ]
      Resource:
        - "Fn::Join":
            - ':'
            - [ "arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "purge_start" ]
        - "Fn::Join":
            - ':'
            - [ "arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "purge_finish" ]
    - Effect: Allow
      Action: [ "cloudwatch:PutMetricData" ]
      Resource: [ "*" ]
  environment:
    SESSION_SECRET: ${env:SESSION_SECRET}
    TWITTER_API_KEY: ${env:TWITTER_API_KEY}
    TWITTER_API_KEY_SECRET: ${env:TWITTER_API_KEY_SECRET}
    TWITTER_CALLBACK_URL: ${env:TWITTER_CALLBACK_URL}
    REDIS_HOSTNAME: ${env:REDIS_HOSTNAME}
    REDIS_PORT: ${env:REDIS_PORT}
    AWS_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
    AWS_REGION: ${self:provider.region}
    AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD, ""}
    REDIS_DB: ${env:REDIS_DB, 0}
    BASE_URL: ${env:BASE_URL}
    HONEYBADGER_API_KEY: ${env:HONEYBADGER_API_KEY}
    APP_ENV: ${env:APP_ENV}


package:
  patterns:
    - '!docs/**'
    - '!package.json'
    - '!package-lock.json'
    - '!node_modules'
    - '!.env.*'
    - '!spec/**'
    - app/**
    - rack_adapter.rb
    - serverless_rack.rb
    - views/**
    - vendor/bundle/**
    - .bundle/**


functions:

  web:
    handler: rack_adapter.handler
    timeout: 10
    events:
      - httpApi: '*'

  start_purge:
    handler: handler.start_purge
    events:
      - sns: purge_start

  purge_batch:
    handler: handler.purge_batch
    events:
      - sns: new_batch

  finish_purge:
    handler: handler.finish_purge
    events:
      - sns: purge_finish

  search:
    handler: search_handler.searchTwitter
    runtime: nodejs14.x
    # Uses Puppeteer, so needs enough memory
    memorySize: 1600
    timeout: 30
    environment:
      CHROMIUM_EXECUTABLE: ${env:CHROMIUM_EXECUTABLE, ""}

custom:
  rack:
    # Only needed if serverless-rack (via `npm run offline:build`) isn't finding your Bundler
    bundlerBin: ${env:BUNDLER_BIN, "bundle"}