service: volgnie
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

frameworkVersion: '^2.66'
useDotenv: true

plugins:
  - serverless-offline
  - serverless-rack

provider:
  name: aws
  runtime: ruby2.7
  memorySize: 256
  logRetentionInDays: 30
  lambdaHashingVersion: 20201221
  timeout: 30
  region: us-west-1
  versionFunctions: false
  httpApi:
    shouldStartNameWithService: true
    payload: '1.0'
  iamRoleStatements:
    - Effect: Allow
      Action: [ "sns:Publish" ]
      Resource:
        - "Fn::Join":
            - ':'
            - [ "arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "purge_start" ]
        - "Fn::Join":
            - ':'
            - [ "arn:aws:sns", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "purge_finish" ]
    - Effect: Allow
      Action: [ "cloudwatch:PutMetricData" ]
      Resource: [ "*" ]
    - Effect: Allow
      Action: [ "lambda:InvokeFunction" ]
      Resource: [ "*" ]
  environment: ${file(./environment.yml)}

package:
  patterns:
    - '!docs/**'
    - '!package.json'
    - '!package-lock.json'
    - '!node_modules'
    - '!.env*'
    - '!spec/**'
    - '!.github/**'
    - app/**
    - rack_adapter.rb
    - serverless_rack.rb
    - views/**
    - vendor/bundle/**
    - .bundle/**


functions:

  web:
    handler: rack_adapter.handler
    timeout: 10
    events:
      - httpApi: '*'

  start_purge:
    handler: handler.start_purge
    timeout: 120
    maximumRetryAttempts: 2
    events:
      - sns: purge_start

  purge_followers:
    handler: handler.purge_followers
    timeout: 120
    maximumRetryAttempts: 0 # We need a larger retry interval
    events:
      - sns: purge_ready

  finish_purge:
    handler: handler.finish_purge
    timeout: 20
    events:
      - sns: purge_finish

  search_twitter:
    handler: search_handler.searchTwitter
    runtime: nodejs14.x
    # Uses Puppeteer, so needs enough memory
    memorySize: 1600
    timeout: 60
    environment:
      CHROMIUM_EXECUTABLE: ${env:CHROMIUM_EXECUTABLE, ""}

  sanities:
    handler: handler.sanities