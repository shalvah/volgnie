service: volgnie
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

frameworkVersion: '^2.66'
useDotenv: true

plugins:
- serverless-offline
- serverless-rack

custom:
  rack:
    bundlerBin: C:\\Ruby27-x64\\bin\\bundle.bat

provider:
  name: aws
  runtime: ruby2.7
  memorySize: 256
  logRetentionInDays: 30
  lambdaHashingVersion: 20201221
  timeout: 30
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: false
  environment:
    SESSION_SECRET: ${env:SESSION_SECRET}
    TWITTER_API_KEY: ${env:TWITTER_API_KEY}
    TWITTER_API_KEY_SECRET: ${env:TWITTER_API_KEY_SECRET}
    TWITTER_CALLBACK_URL: ${env:TWITTER_CALLBACK_URL}
    REDIS_HOSTNAME: ${env:REDIS_HOSTNAME}
    REDIS_PORT: ${env:REDIS_PORT}
    REDIS_PASSWORD: ${env:REDIS_PASSWORD}
    REDIS_DB: ${env:REDIS_DB}
    BASE_URL: ${env:BASE_URL}
    HONEYBADGER_API_KEY: ${env:HONEYBADGER_API_KEY}
    APP_ENV: ${env:APP_ENV}
    TOPIC_ARN:
      "Fn::Join":
      - ':'
      - - "arn:aws:sns"
        - Ref: AWS::AccountId
        - Ref: AWS::Region
        - "__topic__"

package:
  patterns:
  - '!docs/**'
  - '!package.json'
  - '!package-lock.json'
  - '!node_modules'
  - '!.env.*'
  - '!spec/**'
  - app/**
  - views/**
  - vendor/bundle/**
  - .bundle/**

functions:
  web:
    handler: rack_adapter.handler
    events:
      - http: ANY /
      - http: ANY {proxy+}
    iam:
      role:
        statements:
        - Effect: Allow
          Action:
          - sns:Publish
          Resource:
          - "Fn::Join":
            - ':'
            - - "arn:aws:sns"
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - "purge_start"
#  start_purge:
#    handler: handler.start_purge
#    events:
#    - sns: purge_start
#    iam:
#      role:
#        statements:
#        - Effect: Allow
#          Action:
#          - sns:Publish
#          Resource:
#          - "Fn::Join":
#            - ':'
#            - - "arn:aws:sns"
#              - Ref: AWS::Region
#              - Ref: AWS::AccountId
#              - "purge_finish"
#        - Effect: "Allow"
#          Action:
#          - "events:DeleteRule"
#          - "events:RemoveTargets"
#          - "events:PutRule"
#          - "events:PutTargets"
#          Resource:
#          - "*"
#        - Effect: Allow
#          Action:
#          - cloudwatch:PutMetricData
#          Resource:
#          - "*"
#  send_report:
#    handler: handler.send_report
#    events:
#    - sns: purge_finish
#